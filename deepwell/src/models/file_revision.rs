//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use super::sea_orm_active_enums::FileRevisionType;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "file_revision")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub revision_id: i64,
    pub revision_type: FileRevisionType,
    pub created_at: DateTimeWithTimeZone,
    pub revision_number: i32,
    #[sea_orm(column_type = "Text")]
    pub file_id: String,
    pub page_id: i64,
    pub user_id: i64,
    #[sea_orm(column_type = "Text")]
    pub name: String,
    pub s3_hash: Vec<u8>,
    #[sea_orm(column_type = "Text")]
    pub mime_hint: String,
    pub size_hint: i64,
    pub licensing: Json,
    pub changes: Json,
    #[sea_orm(column_type = "Text")]
    pub comments: String,
    pub hidden: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::file::Entity",
        from = "Column::FileId",
        to = "super::file::Column::FileId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    File,
    #[sea_orm(
        belongs_to = "super::page::Entity",
        from = "Column::PageId",
        to = "super::page::Column::PageId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Page,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::UserId",
        to = "super::users::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users,
}

impl Related<super::file::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::File.def()
    }
}

impl Related<super::page::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Page.def()
    }
}

impl Related<super::users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Users.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
